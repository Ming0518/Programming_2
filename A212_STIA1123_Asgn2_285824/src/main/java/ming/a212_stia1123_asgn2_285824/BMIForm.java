/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ming.a212_stia1123_asgn2_285824;

/**
 *
 * @author user
 */
public class BMIForm extends javax.swing.JFrame {
    int ind ;
    StudentOperation operation;
    Student Stud; 

    /**
     * Creates new form BMI_Calculator
     */
    public BMIForm() {
        ind = -1;
        operation = new StudentOperation();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Program = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CalBtn = new javax.swing.JButton();
        SvBtn = new javax.swing.JButton();
        RsBtn = new javax.swing.JButton();
        DsBtn = new javax.swing.JButton();
        ScBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();
        uniCB = new javax.swing.JComboBox<>();
        dgRB = new javax.swing.JRadioButton();
        msRB = new javax.swing.JRadioButton();
        matricTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        weightTF = new javax.swing.JTextField();
        heightTF = new javax.swing.JTextField();
        bmiTF = new javax.swing.JTextField();
        statusTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BMI Calculator");

        jLabel1.setText("Matric Number");

        jLabel2.setText("Name");

        jLabel3.setText("Program");

        jLabel4.setText("University");

        jLabel5.setText("Weight (in KG)");

        jLabel6.setText("Height (in meter)");

        jLabel7.setText("BMI");

        jLabel8.setText("Status");

        CalBtn.setText("Calculate BMI");
        CalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalBtnActionPerformed(evt);
            }
        });

        SvBtn.setText("Save");
        SvBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SvBtnActionPerformed(evt);
            }
        });

        RsBtn.setText("Reset");
        RsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RsBtnActionPerformed(evt);
            }
        });

        DsBtn.setText("Display All");
        DsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DsBtnActionPerformed(evt);
            }
        });

        ScBtn.setText("Search by Matic No");
        ScBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScBtnActionPerformed(evt);
            }
        });

        outputTA.setEditable(false);
        outputTA.setColumns(20);
        outputTA.setRows(5);
        jScrollPane1.setViewportView(outputTA);

        uniCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select you university", "UUM", "UKM", "USM" }));

        Program.add(dgRB);
        dgRB.setText("Degree");

        Program.add(msRB);
        msRB.setText("Master");

        bmiTF.setEditable(false);

        statusTF.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(dgRB)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(msRB))
                                .addComponent(nameTF)
                                .addComponent(matricTF, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bmiTF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(weightTF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(uniCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(heightTF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(statusTF, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CalBtn)
                        .addGap(18, 18, 18)
                        .addComponent(SvBtn)
                        .addGap(18, 18, 18)
                        .addComponent(RsBtn)
                        .addGap(18, 18, 18)
                        .addComponent(DsBtn)
                        .addGap(18, 18, 18)
                        .addComponent(ScBtn)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(matricTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dgRB)
                            .addComponent(msRB))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uniCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(weightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(heightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(bmiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(statusTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CalBtn)
                    .addComponent(SvBtn)
                    .addComponent(RsBtn)
                    .addComponent(DsBtn)
                    .addComponent(ScBtn))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalBtnActionPerformed
        //get the value of weight and height on text field
        String w = weightTF.getText();
        String h = heightTF.getText();

        try{//check weither user is input integer or not
            
            //change string to double
            double weight = Double.parseDouble(w) ;
            double height = Double.parseDouble(h) ;
            
            //calculate bmi
            double bmi = operation.calculateBMI(weight, height);
            String status= operation.getStatusBMI(bmi);
            
            //set the value of bmi and status on text field
            bmiTF.setText(String.format("%.2f",bmi));
            statusTF.setText(status);
            
        }
        catch(NumberFormatException e){//if the value is not integer it will appear
            outputTA.setText("Invalid Entry. Please enter digit only.");
        }

    }//GEN-LAST:event_CalBtnActionPerformed

    private void ScBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScBtnActionPerformed
        if(ind == -1){
            outputTA.setText("There is no data yet in system.");
        }
        
        else{
        int check;
        try{// to check wheter the value is integer or not
            String m = matricTF.getText();
            int matricNo = Integer.parseInt(m) ;
            
            //search using matric no and find which array index are
            check = operation.searchRecord(ind,matricNo);
            
            //if we found it, will set the value in all the text field
            if(check != -1){
                nameTF.setText(operation.getName(check));
                weightTF.setText(operation.getWeight(check));
                heightTF.setText(operation.getHeight(check));
                bmiTF.setText(operation.getBmi(check));
                statusTF.setText(operation.getStatus(check));

                if(operation.getProgram(check).equals("Degree"))
                dgRB.setSelected(true);
                else if(operation.getProgram(check).equals("Master"))
                msRB.setSelected(true) ;
                
               
                switch (operation.getUniversity(check)) {
                    case "UUM":
                        uniCB.setSelectedIndex(1);
                        break;
                    case "UKM":
                        uniCB.setSelectedIndex(2);
                        break;
                    case "USM":
                        uniCB.setSelectedIndex(3);
                        break;
                    default:
                        break;
                }
            }
            //if not found matric no will appear this line
            else{
                outputTA.setText("The record is not found. \nPlease make sure the MatricNo is correct.");
            }
        }
        //if the matirc no is not a integer, will appear this on text area
        catch(NumberFormatException e){
            outputTA.setText("Invalid Entry. Please enter digit only.");
        }
        }
        
    }//GEN-LAST:event_ScBtnActionPerformed

    private void DsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DsBtnActionPerformed
        //display all the data in system
        outputTA.setText("");
        if(ind!=-1)
        for(int i=0; i<ind+1; i++)
        outputTA.append(operation.readAllRecord(i) + "\n\n");
        
        //if the user have not input anything yet, this else will function
        else
        outputTA.setText("You did not insert data in system yet.");

    }//GEN-LAST:event_DsBtnActionPerformed

    private void RsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RsBtnActionPerformed
        //clear or set default the information in tesxtfield and textarea
        matricTF.setText("");
        nameTF.setText("");
        weightTF.setText("");
        heightTF.setText("");
        bmiTF.setText("");
        statusTF.setText("");
        outputTA.setText("");
        Program.clearSelection();
        outputTA.setText("");
        uniCB.setSelectedIndex(0);
    }//GEN-LAST:event_RsBtnActionPerformed

    private void SvBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SvBtnActionPerformed
        //get the value of program
        String program = "";
        if(dgRB.isSelected()){
            program = dgRB.getText();
        }
        if(msRB.isSelected()){
            program = msRB.getText();
        }
        
        //get all the value on text field and combo box
        String name = nameTF.getText();
        String uni = uniCB.getSelectedItem().toString();
        String m = matricTF.getText();
        String w = weightTF.getText();
        String h = heightTF.getText();

        try{
            //change string to int or double
            int matricNo = Integer.parseInt(m) ;
            double weight = Double.parseDouble(w) ;
            double height = Double.parseDouble(h) ;

            double bmi = operation.calculateBMI(weight, height);
            String status= operation.getStatusBMI(bmi);
            
            //save the data in array obeject if the array object is less than 4
            if(ind != 4){
                ind++;
                Stud = new Student(matricNo,name,program,uni,status,weight,height,bmi);
                operation.saveRecord(ind,Stud);
                outputTA.setText("The record has been saved successfully in the array of object.");
            }

            else{
                outputTA.setText("The data is full.");
            }
        }
        catch(NumberFormatException e){
            outputTA.setText("Invalid Entry. Please enter digit only.");
        }
    }//GEN-LAST:event_SvBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMIForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalBtn;
    private javax.swing.JButton DsBtn;
    private javax.swing.ButtonGroup Program;
    private javax.swing.JButton RsBtn;
    private javax.swing.JButton ScBtn;
    private javax.swing.JButton SvBtn;
    private javax.swing.JTextField bmiTF;
    private javax.swing.JRadioButton dgRB;
    private javax.swing.JTextField heightTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField matricTF;
    private javax.swing.JRadioButton msRB;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextArea outputTA;
    private javax.swing.JTextField statusTF;
    private javax.swing.JComboBox<String> uniCB;
    private javax.swing.JTextField weightTF;
    // End of variables declaration//GEN-END:variables
}
